# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout pipeforce-sdk-java
        uses: actions/checkout@v2
        with:
          repository: logabit/pipeforce-sdk-java
          token: ${{ secrets.PIPEFORCE_SDK_JAVA }}
          ref: master
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build pipeforce-sdk-java
        run: mvn -B package install --file pom.xml
      - name: Checkout pipeforce-cli
        uses: actions/checkout@v2
      - name: Build pipeforce-cli
        run: mvn -B package install --file pom.xml
      - name: Package jar as dmg installer
        run: "jpackage --name pipeforce-cli -i jars --main-class com.logabit.pipeforce.cli.Main --main-jar pipeforce-cli-2.26-jar-with-dependencies.jar  --input ./target --dest ./target"
      - name: List build artifacts
        run: ls ./target
      - name: Create tar.gz
        run: |
          mkdir deb-unpackaged
          dpkg-deb -R pipeforce-cli_1.0-1_amd64.deb deb-unpackaged
          cd deb-unpackaged
          tar -czvf pipeforce-cli.tar.gz *
          ls
      - name: Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "./target/pipeforce-*.jar,./target/*.deb,./deb-unpackaged/*.tar.gz"
          token: ${{ secrets.PIPEFORCE_SDK_JAVA }}
          

